function task2()  #Load image  [IMG, path] = read_file();  #Detect type  detect_type(path);  imshow(rgb2gray(IMG));  figure;  #Hist  histogramma(IMG);  #Noice  ns = noice(IMG);  #Filter  f = filt(ns);  [a, b, c] = compare (f, rgb2gray(IMG));  a  b  c  #Save imageendfunctionfunction type = detect_type(path)  f = imfinfo(path);  type=f.ColorType;endfunctionfunction [IMG, fn] = read_file()  fn = input('File name: ', 's');  f = imfinfo(fn);  im_type=f.ColorType  im_indexed='indexed';  if strcmp(im_type, im_indexed)    [im_1, map] = imread(fn);    IMG = ind2rgb(im_1, map);    else    IMG = imread(fn);  endifendfunctionfunction image_save(IMG)  fn = input('File name: ', 's');  imwrite(IMG, fn)
endfunction
function histogramma(IMG)  imhist(IMG);  title ('Histogramma');
endfunction
function noicy = noice(IMG)  noicy=rgb2gray(IMG);  noicy=imnoise(noicy,'salt & pepper');  figure;  imshow(noicy);  title('Noice');endfunctionfunction D = filt (Is)  D=medfilt2(Is);  figure, imshow(D);  title('Filter')  h=fspecial('unsharp');  D=filter2(h,D);  figure, imshow(D);  title('unsharp');endfunctionfunction [m,c,z] = compare (D, S)  m1 = std2(S); m2 = std2(D); m=m1-m2;  c1 = mean2(S); c2 = mean2(D); c = c1-c2;  z = corr2(S,D); endfunction